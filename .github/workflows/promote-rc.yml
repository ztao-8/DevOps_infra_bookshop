name: Promote RC Image

on:
  workflow_dispatch:
    inputs:
      RELEASE_TAG:
        description: "Release Candidate Tag (e.g., rc1, rc2, etc.)"
        required: true

jobs:
  promote-image:
    runs-on: ubuntu-latest
    steps:
      - name: AWS Login
        run: |
          aws ecr get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin 509585101616.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag Images with RC Label
        run: |
          echo "🚀 Promoting latest images to RC tag: ${{ github.event.inputs.RELEASE_TAG }}"

          FRONTEND_MANIFEST=$(aws ecr batch-get-image --repository-name bookshop-frontend --image-ids imageTag=latest --query 'images[].imageManifest' --output json | jq -r '.[0]')
          if [ -z "$FRONTEND_MANIFEST" ]; then
            echo "❌ No frontend image found!"
            exit 1
          fi
          aws ecr put-image --repository-name bookshop-frontend --image-tag ${{ github.event.inputs.RELEASE_TAG }} --image-manifest "$FRONTEND_MANIFEST"

          BACKEND_MANIFEST=$(aws ecr batch-get-image --repository-name bookshop-backend --image-ids imageTag=latest --query 'images[].imageManifest' --output json | jq -r '.[0]')
          if [ -z "$BACKEND_MANIFEST" ]; then
            echo "❌ No backend image found!"
            exit 1
          fi
          aws ecr put-image --repository-name bookshop-backend --image-tag ${{ github.event.inputs.RELEASE_TAG }} --image-manifest "$BACKEND_MANIFEST"

      - name: SSH into RC EC2 and Deploy
        run: |
          echo "🚀 Deploying RC ${{ github.event.inputs.RELEASE_TAG }} to EC2"

          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > book-key.pem
          chmod 400 book-key.pem

          ssh -o StrictHostKeyChecking=no -i book-key.pem ubuntu@${{ secrets.RC_EC2_IP }} << EOF
            export ECR_BACKEND_IMAGE="509585101616.dkr.ecr.us-east-1.amazonaws.com/bookshop-backend:${{ github.event.inputs.RELEASE_TAG }}"
            export ECR_FRONTEND_IMAGE="509585101616.dkr.ecr.us-east-1.amazonaws.com/bookshop-frontend:${{ github.event.inputs.RELEASE_TAG }}"

            cd ~/deploy || exit 1
            echo "📦 Pulling new RC images..."
            docker-compose -f docker-compose-rc.yml pull
            docker-compose -f docker-compose-rc.yml down
            docker-compose -f docker-compose-rc.yml up -d

            echo "✅ RC environment deployed!"
          EOF
